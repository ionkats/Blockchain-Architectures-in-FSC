import contractABI from "./ABI.js"

// used for the deployment of the contract along the ABI
var contractData = "0x608060405234801561001057600080fd5b50610aef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636b856cd714610067578063b5a7ea0614610083578063b6dbd825146100a1578063ba256b5c146100bd578063c6e5a419146100d9578063ce651c1a14610109575b600080fd5b610081600480360381019061007c91906105f3565b610125565b005b61008b610196565b6040516100989190610736565b60405180910390f35b6100bb60048036038101906100b69190610525565b61019c565b005b6100d760048036038101906100d29190610578565b610267565b005b6100f360048036038101906100ee919061049c565b61030d565b60405161010091906106db565b60405180910390f35b610123600480360381019061011e91906104c9565b61032d565b005b61012d6103ca565b7f1bf43c4e75a7bff085adfa4cd1169f72e357c0b294df3682aa5e0a846fb49530824260405161015e9291906107b8565b60405180910390a26001600080600154815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60015481565b60008084815260200190815260200160002060009054906101000a900460ff166101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906106f6565b60405180910390fd5b827fd10cf7e55fd1ee438dcbd3db7f77f6cf1e212df7868df78c9b21682b046b67b683834260405161022f93929190610781565b60405180910390a2600080600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60008086815260200190815260200160002060009054906101000a900460ff166102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90610716565b60405180910390fd5b847f86d35a3e42d5a887505753c1790979e2cae4b70139b38a8e87e398deed56298f85858585426040516102fe9594939291906107e1565b60405180910390a25050505050565b60006020528060005260406000206000915054906101000a900460ff1681565b60008083815260200190815260200160002060009054906101000a900460ff1661038c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610383906106f6565b60405180910390fd5b817f4303a873fbd8b09c053de5da9bd4246acb454c5c47b33a1446844caf71f8605942836040516103be929190610751565b60405180910390a25050565b600060018060008282546103de91906108a6565b92505081905550600154905090565b60006104006103fb84610859565b610834565b90508281526020810184848401111561041c5761041b610a02565b5b61042784828561092c565b509392505050565b60008135905061043e81610a74565b92915050565b600082601f830112610459576104586109fd565b5b81356104698482602086016103ed565b91505092915050565b60008135905061048181610a8b565b92915050565b60008135905061049681610aa2565b92915050565b6000602082840312156104b2576104b1610a0c565b5b60006104c084828501610472565b91505092915050565b600080604083850312156104e0576104df610a0c565b5b60006104ee85828601610472565b925050602083013567ffffffffffffffff81111561050f5761050e610a07565b5b61051b85828601610444565b9150509250929050565b60008060006060848603121561053e5761053d610a0c565b5b600061054c86828701610472565b935050602061055d86828701610487565b925050604061056e8682870161042f565b9150509250925092565b600080600080600060a0868803121561059457610593610a0c565b5b60006105a288828901610472565b95505060206105b388828901610487565b94505060406105c488828901610487565b93505060606105d58882890161042f565b92505060806105e688828901610487565b9150509295509295909350565b60006020828403121561060957610608610a0c565b5b600061061784828501610487565b91505092915050565b610629816108fc565b82525050565b61063881610908565b82525050565b60006106498261088a565b6106538185610895565b935061066381856020860161093b565b61066c81610a11565b840191505092915050565b6000610684601283610895565b915061068f82610a22565b602082019050919050565b60006106a7601283610895565b91506106b282610a4b565b602082019050919050565b6106c681610912565b82525050565b6106d58161091c565b82525050565b60006020820190506106f06000830184610620565b92915050565b6000602082019050818103600083015261070f81610677565b9050919050565b6000602082019050818103600083015261072f8161069a565b9050919050565b600060208201905061074b60008301846106bd565b92915050565b600060408201905061076660008301856106bd565b8181036020830152610778818461063e565b90509392505050565b600060608201905061079660008301866106cc565b6107a3602083018561062f565b6107b060408301846106bd565b949350505050565b60006040820190506107cd60008301856106cc565b6107da60208301846106bd565b9392505050565b600060a0820190506107f660008301886106cc565b61080360208301876106cc565b610810604083018661062f565b61081d60608301856106cc565b61082a60808301846106bd565b9695505050505050565b600061083e61084f565b905061084a828261096e565b919050565b6000604051905090565b600067ffffffffffffffff821115610874576108736109ce565b5b61087d82610a11565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006108b182610912565b91506108bc83610912565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108f1576108f061099f565b5b828201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b60005b8381101561095957808201518184015260208101905061093e565b83811115610968576000848401525b50505050565b61097782610a11565b810181811067ffffffffffffffff82111715610996576109956109ce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f74206163746976652073657373696f6e0000000000000000000000000000600082015250565b7f4e6f74206163746976652053657373696f6e0000000000000000000000000000600082015250565b610a7d81610908565b8114610a8857600080fd5b50565b610a9481610912565b8114610a9f57600080fd5b50565b610aab8161091c565b8114610ab657600080fd5b5056fea264697066735822122044d2bea004541748b752c8a47e7c1d65149ee437ae04279184396c6a7ef2699564736f6c63430008070033"

var contractAddresses = []
var contractObjects = []
var addresses = []
var web3Instances = []


// uncomment the code blocks based on the number of servers you want to activate
export function initializeWithoutData() {

    // create instances, get the accounts and deploy the smart contract for all the chains
    var web3_0 = new Web3('ws://localhost:8540')
    var stateandsessionContract_0 = new web3_0.eth.Contract(contractABI)
    saveAccountsDeployContract(web3_0, stateandsessionContract_0, 0)


    // var web3_1 = new Web3('ws://localhost:8541')
    // var stateandsessionContract_1 = new web3_1.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_1, stateandsessionContract_1, 1)

    // var web3_2 = new Web3('ws://localhost:8542')
    // var stateandsessionContract_2 = new web3_2.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_2, stateandsessionContract_2, 2)

    // var web3_3 = new Web3('ws://localhost:8543')
    // var stateandsessionContract_3 = new web3_3.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_3, stateandsessionContract_3, 3)

    // var web3_4 = new Web3('ws://localhost:8544')
    // var stateandsessionContract_4 = new web3_4.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_4, stateandsessionContract_4, 4)

    // var web3_5 = new Web3('ws://localhost:8545')
    // var stateandsessionContract_5 = new web3_5.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_5, stateandsessionContract_5, 5)

    // var web3_6 = new Web3('ws://localhost:8546')
    // var stateandsessionContract_6 = new web3_6.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_6, stateandsessionContract_6, 6)

    // var web3_7 = new Web3('ws://localhost:8547')
    // var stateandsessionContract_7 = new web3_7.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_7, stateandsessionContract_7, 7)

    // var web3_8 = new Web3('ws://localhost:8548')
    // var stateandsessionContract_8 = new web3_8.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_8, stateandsessionContract_8, 8)

    // var web3_9 = new Web3('ws://localhost:8549')
    // var stateandsessionContract_9 = new web3_9.eth.Contract(contractABI)
    // saveAccountsDeployContract(web3_9, stateandsessionContract_9, 9)

    return([addresses, contractObjects, contractAddresses, web3Instances])
}


function saveAccountsDeployContract(web3_instance, stateandsessionContract, i) {
    // var address
    web3_instance.eth.getAccounts().then( fetchedAccounts => {
                                        // console.log(fetchedAccounts)
                                        addresses.push(fetchedAccounts)
                                        var max = fetchedAccounts.length
                                        stateandsessionContract.deploy({data: contractData, arguments: []})
                                                        .send({from: fetchedAccounts[random(0, max)], gas: '15000000'})
                                                        .then( (contractCreated) => {
                                                            console.log('Contract mined for chain ' + i +'. Address: ' + contractCreated.options.address)
                                                            contractAddresses.push(contractCreated.options.address)
                                                            contractObjects.push(new web3_instance.eth.Contract(contractABI, contractCreated.options.address))
                                                        })
                                            })
    web3Instances.push(web3_instance)
}


// get random integer in [min, max)
export function random(min, max) {
    return (Math.floor(Math.random()*(max - min)) + min)
}